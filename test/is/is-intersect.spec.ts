import isIntersect from "../../src/is/is-intersect";
import toMoment from "../../src/to/to-moment";

describe.each([
    { x1: "2022-03-12 00:00:00:000", x2: "2022-05-13 00:00:00:000", x3: "2022-04-15 08:00:00:00", x4: "2022-04-18 08:00:00:000", result: true },
    { x1: "2022-04-11 00:00:00:000", x2: "2022-04-12 00:00:00:000", x3: "2022-04-12 08:00:00:000", x4: "2022-04-12 08:00:00:000", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "2022-04-13 00:00:00:000", x3: "2022-04-12 08:00:00:000", x4: "2022-04-12 08:00:00:000", result: true },
    { x1: "2022-04-11 00:00:00:000", x2: "2022-04-12 00:00:00:000", x3: "2022-04-12 00:00:00:000", x4: "2022-04-12 00:00:00:000", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "2022-04-13 00:00:00:000", x3: "2022-04-12 00:00:00:000", x4: "2022-04-12 00:00:00:000", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "2022-04-13 00:00:00:000", x3: "2022-04-12 00:00:00:000", x4: "Invalid date", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "2022-04-13 00:00:00:000", x3: "Invalid date", x4: "2022-04-12 00:00:00:000", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "Invalid date", x3: "2022-04-12 00:00:00:000", x4: "2022-04-12 00:00:00:000", result: false },
    { x1: "Invalid date", x2: "2022-04-13 00:00:00:000", x3: "2022-04-12 00:00:00:000", x4: "2022-04-12 00:00:00:000", result: false },
    { x1: "2022-04-12 00:00:00:000", x2: "2022-04-13 00:00:00:000", x3: "2022-04-11 08:00:00:000", x4: "2022-04-16 08:00:00:000", result: true },
    { x1: "2022-04-13 00:00:00:000", x2: "2022-04-12 00:00:00:000", x3: "2022-04-11 08:00:00:000", x4: "2022-04-16 08:00:00:000", result: true },
    { x1: "2022-04-13 00:00:00:000", x2: "2022-04-12 00:00:00:000", x3: "2022-04-16 08:00:00:000", x4: "2022-04-11 08:00:00:000", result: true },
])("isIntersect: 相交测试", ({ x1, x2, x3, x4, result }) => {
    it(`[${x1}, ${x2}, ${x3}, ${x4}]: 相交测试`, () => {
        const data = isIntersect(toMoment(x1), toMoment(x2), toMoment(x3), toMoment(x4));
        expect(data).toBe(result);
    });
});
